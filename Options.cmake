option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_CACHE "Enable build cache if available" ON)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_CLANG_TIDY "Enable static analysis with clang-tidy" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_COVERAGE "Enable coverage reporting for GCC/Clang" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_CPPCHECK "Enable static analysis with cppcheck" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_INCLUDE_WHAT_YOU_USE "Enable static analysis with include-what-you-use" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_IPO "Enable Iterprocedural Optimization, aka Link Time Optimization (LTO)" ON)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_SANITIZER_ADDRESS "Enable address sanitizer" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_SANITIZER_LEAK "Enable leak sanitizer" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_SANITIZER_MEMORY "Enable memory sanitizer" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_SANITIZER_THREAD "Enable thread sanitizer" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_SANITIZER_UNDEFINED_BEHAVIOR "Enable undefined behavior sanitizer" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_ENABLE_TESTING "Enable Test Builds" ON)
option (${PROJECT_CMAKE_NAMESPACE}_GENERATE_DOCUMENTATION "Generate project documentation" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_TREAT_WARNINGS_AS_ERRORS "Treat compiler warnings as errors" ON)

# Dependencies
option (${PROJECT_CMAKE_NAMESPACE}_FMT_USE_BUILTIN "Download and build fmt as a part of the project" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_Microsoft.GSL_USE_BUILTIN "Download and build Microsoft.GSL as a part of the project" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_HEDLEY_USE_BUILTIN "Download and build Hedley as a part of the project" OFF)
option (${PROJECT_CMAKE_NAMESPACE}_SDL2_USE_BUILTIN "Download and build SDL2 as a part of the project" OFF)
